;ins ection 3.2.3 we saw how the enviroment model descrived the behavior of
;procedures with local state. now we have seen how internal definitions work. a
;typical message-passing procedure contains both of these aspects. consider the
;bank account procedure of 3.1.1

(define (make-account balance)
  (define (withdraw amount)
    (if (>= balance amount)
      (begin (set! balance (- balance amount))
             balance)
      "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch m)
    (cond ((eq? m 'withdraw)withdraw)
          ((eq? m 'deposit)deposit)
          (else (error "Unknown request -- Make-Account"
                       m))))
  dispatch)

;show the environment structure generated by the sequence of interactions

(define acc (make-account 50))
((acc 'deposit)40)
;90
((acc 'withdraw)60)
;30

;where is the local state for acc kept? suppose we define another account
(define acc2 (make-account 100))

;how are the local states for the two accounts kept distinct? which parts of the
;enviroment structure are shared between acc and acc2

;InitialState
;Global ]= Procedure:make-account,
;          Param:Balance,Return:Dispatch
;(define acc (make-account 50))
;Call (make-account 50) ; Create E1
;E1 ]= Variable:Balance=50
;      Procedure:Dispatch,Deposit,Withdraw
;      Param:m, Return:Deposit OR Withdraw
;Global ]= Procedure:Acc, binded to E1 Dispatch
;Call ((acc 'deposit)40)
;Call (acc 'deposit) ; Dispatch Create E2
;E2 ]= Parent:E1, Variable:m='deposit
;      Returns: Deposit , found in E1
;Call (Deposit 40) ; Creates E3
;E3 ]= Parent:E2, Varible:amount=40
;      Sets:balance, found in E1, Returns balance, Found in E1
;Returns E1's Balance Of 90,Delet E2,E3
;Call ((acc 'withdraw)60)
;Call (acc 'withdraw)
;same shit again. E2->E3 but with withdraw.
;Delete E2,E3
;Local state for acc is kept in E1 which was generated by make-account
;(define acc2 (make-account 100))
;Generate E2 the same as E1,

;they keep the balance, to themselves, they share the dispatch, and if im
;correct in thinking they use something like a return address on a stack then
;they share withdraw/deposit.

